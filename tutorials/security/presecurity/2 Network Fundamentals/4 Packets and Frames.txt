### Networking Fundamentals > Packets and Frames
  - What are Packets and Frames
  - TCP/IP(The Three-Way Handshake)
  - UDP/IP
  - Ports 101
---


#### Packet and Frames
  - Packet: Contains IP addresses, used at Layer 3 (Network Layer).
  - Frame: No IP addresses, used at Layer 2 (Data Link Layer).
  - Encapsulation: Wrapping data with layers of information (like an envelope inside another).
  - Efficiency: Sending data in small packets prevents network congestion.

  - Packet Headers:
    - Time to Live (TTL): Limits packet lifespan.
    - Checksum: Ensures data integrity.
    - Source Address: Sender's IP.
    - Destination Address: Receiver's IP.

  - Summary:
    - Packet = IP info.
    - Frame = No IP info.
---


#### TCP/IP(The Three-Way Handshake)
  - TCP (Transmission Control Protocol)
    - TCP/IP Model: Four layers—Application, Transport, Internet, and Network Interface—a simplified version of the OSI model.
    - Encapsulation: Adds information as data passes through layers, and removes it at the destination.
    - Connection-based: Establishes a connection before sending data, ensuring data integrity.
    - Three-way handshake: The process to establish a reliable connection.

  - Pros and Cons:
    - Advantages: Guarantees data integrity, synchronizes devices, ensures reliability.
    - Disadvantages: Requires reliable connections, slower than UDP, prone to bottlenecks with slow connections.


  - TCP packet headers and handshake process
+----------------------+-----------------------------------------------+
| Header               | Description                                   |
+----------------------+-----------------------------------------------+
| Source Port          | Port opened by sender (random 0-65535)        |
| Destination Port     | Port on remote host (e.g., webserver on 80)   |
| Source IP            | IP address of the sending device              |
| Destination IP       | IP address of the receiving device            |
| Sequence Number      | Random number for first data piece            |
| Acknowledgement Num  | Next data's sequence number + 1               |
| Checksum             | Ensures data integrity through math check     |
| Data                 | The actual transmitted data (bytes)           |
| Flag                 | Determines how the packet should be handled   |
+----------------------+-----------------------------------------------+

  - Three-way handshake
+----+-----------+-----------------------------------------------------+
| #  | Message   | Description                                         |
+----+-----------+-----------------------------------------------------+
| 1  | SYN       | Client sends to initiate a connection               |
| 2  | SYN/ACK   | Server acknowledges the client's SYN message        |
| 3  | ACK       | Acknowledges that messages have been received       |
| 4  | DATA      | Sends actual data after connection is established   |
| 5  | FIN       | Cleanly closes the connection                       |
| #  | RST       | Abruptly ends communication due to an issue         |
+----+-----------+-----------------------------------------------------+
---


#### UDP/IP 
  - Advantages and Disadvantages of UDP
+----------------------------------------------+------------------------------------------------+
| Advantages of UDP                            | Disadvantages of UDP                            |
+----------------------------------------------+------------------------------------------------+
| UDP is much faster than TCP.                 | UDP doesn't care if the data is received or not.|
| UDP gives control over packet send rate.     | Flexible, but can result in poor connections.   |
| UDP doesn't reserve a continuous connection. | Unstable connections result in bad user experience.|
| No connection setup required (faster start). | No safeguards like data integrity in TCP.       |
+----------------------------------------------+------------------------------------------------+


  - UDP Packet Headers
+---------------------+---------------------------------------------------------+
| Header              | Description                                             |
+---------------------+---------------------------------------------------------+
| Time to Live (TTL)  | Sets an expiry timer to prevent packets from clogging up.|
| Source Address      | The IP address of the sender's device.                  |
| Destination Address | The IP address of the receiving device.                 |
| Source Port         | The port opened by the sender (randomly chosen).        |
| Destination Port    | The port number on the remote host (e.g., web server).  |
| Data                | The actual data being transmitted (e.g., file bytes).   |
+---------------------+---------------------------------------------------------+


#### Ports101 (Well known ports)
+----------------+-------------------------+
| Port Number    | Protocol/Service         |
+----------------+-------------------------+
| 20, 21         | FTP (File Transfer Protocol) |
| 22             | SSH (Secure Shell)       |
| 23             | Telnet                   |
| 25             | SMTP (Simple Mail Transfer Protocol) |
| 53             | DNS (Domain Name System) |
| 67, 68         | DHCP (Dynamic Host Configuration Protocol) |
| 80             | HTTP (Hypertext Transfer Protocol) |
| 110            | POP3 (Post Office Protocol 3) |
| 143            | IMAP (Internet Message Access Protocol) |
| 443            | HTTPS (HTTP Secure)      |
| 3389           | RDP (Remote Desktop Protocol) |
| 53             | DNS (Domain Name System) |
| 137-139        | NetBIOS                  |
| 445            | SMB (Server Message Block) |
+----------------+-------------------------+


+----------------+-----------------------------+-----------------------------------+
| Port Range     | Type                        | Description                       |
+----------------+-----------------------------+-----------------------------------+
| 0-1023         | Well-known Ports            | Reserved for standard services and protocols. Examples: HTTP (80), FTP (21), SSH (22). |
| 1024-49151     | Registered Ports            | Used by software or services for non-standard applications. Examples: MySQL (3306), RDP (3389). |
| 49152-65535    | Dynamic/Private Ports       | These ports are used for client-side communications and are dynamically assigned. Examples: Temporary ports for outbound communications. |
+----------------+-----------------------------+-----------------------------------+

#### a brief explanation of **ports** in networking:

- A **port** is a virtual point where network connections start and end.
- Ports help direct data to the correct program or service on a device.
- Each port is identified by a unique number (0-65535).
- Ports are associated with IP addresses to manage traffic.
- **Well-known ports** (0-1023) are reserved for common services (e.g., HTTP, FTP).
- **Registered ports** (1024-49151) are used for specific applications.
- **Dynamic/Private ports** (49152-65535) are used for temporary communication.

Ports act like doors through which data enters and leaves a device on a network.
---