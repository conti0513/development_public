### Linux Fundamentals > Linux Findamentals Part1
- Index
  - Linux Findamentals Part1
  - Linux Findamentals Part2
  - Linux Findamentals Part3

#### Linux Findamentals Part1
- Index
  # Task 1 Introduction
  # Task 2 A Bit of Background on Linux
  # Task 3 Interacting With Your First Linux Machine (In-Browser)
  # Task 4 Running Your First few Commands
  # Task 5 Interacting With the Filesystem!
  # Task 6 Searching for Files
  # Task 7 An Introduction to Shell Operators
  # Task 8 Conclusions & Summaries




# Task 1 Introduction

  - Introduction to Linux, another popular operating system like Windows and MacOS.
  
  - Linux powers a wide range of devices including smart cars, Android devices, supercomputers, home appliances, and enterprise servers.
    
  - In this module, you will:
    - Learn about the history of Linux.
    - Run your first commands in an interactive Linux environment.
    - Learn essential commands for interacting with the file system.
    - Discover how to search for files.
    - Get introduced to shell operators.



# Task 2 A Bit of Background on Linux
  - Summary: Where is Linux Used?
    - Linux is widely used in various systems, though it may seem more complex than other OSs like Windows.
    Advantages of Linux:
    - Lightweight and efficient.
    - It's likely that you encounter Linux daily, as it powers:
      - Websites
      - Car entertainment/control panels
      - Point of Sale (PoS) systems
      - Critical infrastructure like traffic light controllers and industrial sensors.
    
    -Flavours of Linux:
      - Linux is a term used for many different OS versions based on UNIX.
      - Open-source nature of Linux allows for many variations suited for different uses.
      - For example:
        - Ubuntu and Debian are common distributions, used for servers or as desktop systems.
        - Ubuntu Server can run with as little as 512MB of RAM.
        - Just like Windows has different versions (7, 8, 10), Linux has many distributions.
    
    - First release of Linux: 1991.

# Task 3 Interacting With Your First Linux Machine (In-Browser)
# Task 4 Running Your First few Commands

  - Summary: Using the Linux Terminal with Example Output
    - Ubuntu's lightweight nature often means that it lacks a GUI (Graphical User Interface) by default.
    Instead, interaction is done via the Terminal, a text-based interface.
    While initially intimidating, familiarity with commands makes terminal usage much easier over time.

  - Basic Terminal Commands with Example Output:
    
    - echo: Outputs any text provided.
    bash
    $ echo Hello, World!
    Hello, World!

    - whoami: Displays the username of the currently logged-in user.
    bash
    $ whoami
    user1
    ---

# Task 5 Interacting With the Filesystem!

  - Commands Overview:
    ls: Lists the contents of the current directory.
    cd: Changes the current directory.
    cat: Outputs the contents of a file.
    pwd: Prints the full path of the current working directory.
    
  - Detailed Breakdown:
    - Listing Files (ls):

    Lists all files and folders in the current directory.
    Example:
    bash
    $ ls
    Important Files  My Documents  Notes  Pictures
    
    
    - Changing Directories (cd):

    Changes your current directory to a specified one.
    Example:
    bash
    $ cd Pictures
    $ ls
    dog_picture1.jpg dog_picture2.jpg
    
    - Outputting File Contents (cat):

    Displays the content of a file.
    Example:
    bash
    $ cat todo.txt
    Here's something important for me to do later!
   
    - Finding the Current Path (pwd):

    Shows the full path of your current working directory.
    Example:
    bash
    $ pwd
    /home/ubuntu/Documents

---

  
# Task 6 Searching for Files
  - Find Command:
    - Efficiently searches for files without navigating directories manually.
    Use find -name [filename] to search for a specific file.
    - Example: find -name passwords.txt finds the file location.
    Use wildcards like *.txt to search for all files with a certain extension.
    
    - Example:
    find -name *.txt finds all .txt files in the current directory.
    Output might show multiple locations for .txt files.
    
  - Grep Command:
    - Searches inside files for specific text or values.
    
    - Example: grep "81.143.211.90" access.log searches a log file for entries containing the specified IP address.
    
    - Efficiency:
    Both find and grep make searching for files and contents quicker and more manageable, especially when dealing with large files or multiple directories.
---


# Task 7 An Introduction to Shell Operators
  - Shell Operators Overview:
    Linux shell operators are useful for enhancing command-line operations.
    Key operators include &, &&, >, and >>.

  - Detailed Breakdown of Operators:
    - &: Runs commands in the background, allowing you to continue working while the command executes in the background (e.g., copying a large file).

    - &&: Combines multiple commands in one line. Command2 will only run if Command1 executes successfully (e.g., command1 && command2).

    - >: Redirects the output of a command to a file, replacing the file's content. For example, echo hey > welcome creates a file named "welcome" with the content "hey". Note: If the file already exists, its content is overwritten.

    - >>: Appends output to a file rather than replacing its contents. For example, echo hello >> welcome adds "hello" to the existing "welcome" file without overwriting its current content.

  - Example Questions:
    - To run a command in the background, use: &
    - To overwrite the contents of a file with "password123", use: echo password123 > passwords
    - To append "tryhackme" to a file while keeping the existing content, use: echo tryhackme >> passwords
  

  - Here's the pronunciation for the key operators:
    - & (ampersand): Pronounced as "and."
    - && (double ampersand): Pronounced as "and and."
    - > (greater than): Pronounced as "redirect" or "greater than."
    - >> (double greater than): Pronounced as "append" or "double redirect."
---

# Task 8 Conclusions & Summaries
  - Conclusions & Summaries:
    You've completed an introduction to Linux and learned the basics.

  - Key topics covered:
    - Why Linux is so popular and widely used today.
    - Interacting with a Linux machine for the first time.
    - Fundamental commands like echo, ls, cd, cat, etc.
    - Navigating the filesystem and using commands like find and grep to locate data efficiently.
    - Shell operators like &, &&, >, and >> to enhance command usage.
---
