name: Terraform Apply

# GitHubActions Workflow
# Trigger the workflow on a push to the main branch when changes are made
# in the specified directory (projects/aws_projects/experience2_flexible_monitoring/**).
on:
  push:
    branches:
      - main
    paths:
      - 'projects/aws_projects/experience2_flexible_monitoring/**'

# Job definition: Specifies the environment and steps required to perform a task.
jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Ensure the workflow has the latest code before proceeding with the next steps.
      - name: Checkout code
        uses: actions/checkout@v2

      # fetch Public IP and Generate vars.tf

      - name: Fetch Public IP and Generate vars.tf
        run: |
          chmod +x /workspaces/development_public/fetch_public_ip.sh
          /workspaces/development_public/fetch_public_ip.sh

      # Set up Terraform in the workflow environment.
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize Terraform to prepare the environment before applying configurations.
      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      # Apply the Terraform configuration, automating the deployment of infrastructure changes.
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform

      # Set environment variables for the job, passing sensitive data and configuration settings.
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        TF_VAR_key_name: ${{ secrets.KEY_NAME }}
        TF_VAR_vpc_id: ${{ secrets.VPC_ID }}  # Get VPC ID from GitHub Secrets
