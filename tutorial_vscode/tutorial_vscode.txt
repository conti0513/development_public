###############################################

＃　開発環境の構築

## VSCodeのインストール
VSCode最初の1歩（インストール／日本語化／基本的な使い方）【プログラミング】
https://youtube.com/watch?v=auGKppIIV4Y&feature=shares

MacのVSCodeインストール
自分の環境に合わせてダウンロード
一般的なAPPインストールと同様
VSCodeの初期画面になる

必要であれば、拡張機能をインストールし、日本語化しておく
※左側ウィンドウの「ブロック」のアイコンをクリック


---
使い方の基本

１　プロジェクトフォルダを追加（初回）
２　新規ファイルを作成／ファイルを開く
３　内容を編集
４　Ctrl ± S で保存

---

Dock（ツールバー）を右クリック
VSCodeのアイコンを追加しておくと便利


## 開発環境を構築する手順　

開発のためには、WEBサーバーとデータベースサーバーを構築するのが一般的


### XAMPPを使用
https://youtube.com/watch?v=5hG50ddh6Rw&feature=shares


### Dockerを使用
参考URL
https://youtube.com/watch?v=JP2f1R432Fw&feature=shares
https://idealump.com/service/lab/95

目次

Dockerによる環境構築
1.  Dockerのインストール
2.  ディレクトリ・ファイルの準備
3.  Dockerfileの作成
4.  docker-compose.ymlの作成
5.  index.phpの作成
6.  コンテナの起動
7.  動作確認

#### 環境情報
PC
・MacBookAir M1

Docker Desctop
・Ver

開発環境
・Apache
・PHP 
・

#### Dockerの構築フロー
 Dockerfile
 　自分で作る
 　Imageを自作するためのファイル

  ↓　build
 　 
 image
 　コンテナを起動する土台
 　DockerHubで公開されている

  ↓　run

 Container(コンテナ）
 　アプリケーションの実行環境
 　使い捨て可能
 　開始・停止・削除
---

#### Apacheとドキュメントルート
Apache
 Webサーバのソフトウェア
 Webブラウザのリクエストに応じて、ファイルをレスポンスで返す

ドキュメントルート
　外部に公開されたファイルが置かれたディレクトリ
　ドキュメントルートがアクセスの起点になる


#### 手順
Dockerアプリのインストール　別な手順で対応済み
表示するphpファイルなどのフォルダ作成
Dockerfilewo作成
Dockerfilekaraイメージを作成
コンテナ作成・起動

※Dockerfieleに書いておかないと、意図したファイルがひらけない

P1
FROM php:8.1.12-apache
COPY src; /var/www/html

 P2
 公式ドキュメントに
 ドキュメントルート
 　ポート
 が書いてあるのでその通りにやること

 Docker ーーー> PHP serach

 ---

一旦Dockerをストップする
docker-compose down




#### docker-phpフォルダを作成

構成
---
docker-php

├── docker-compose.yml //ファイル

├── html               //フォルダ 一旦やめ


├──src                 //フォルダ
    └── index.php      //ファイル

├── mysql              //フォルダ

└── php                //フォルダ

├── Dockerfile         //ファイル

    └── php.ini            //ファイル
---

※上記の通り、Documentrootにindex.phpを配置すること
※また、配置場所とdocker-compose.ymlの記載内容を合わせること



2-5は適宜作成

docker-compose.yml に以下を入れないとこける

# for m1 mac
platform: linux/x86_64

# ホスト側のポートは0にして自動でポートを割り当てる
services:
  app:
    image: example/app
    ports:
      - "0:80"
※[ホスト側のポート番号]:[コンテナ側のポート番号]

確認方法
docker-compose ps

---

 # volumes:    
 # <- Bind mount するディレクトリ。volume。docker run コマンドの-v/--volume に相当
 #  - "$PWD/app-server/src:/usr/src/app"
 # 参考URL https://qiita.com/mk-tool/items/1c7e4929055bb3b7aeda
# COPY ./hogehoge /tmp


6.  コンテナの起動
$ cd docker-php
$ ç


docker run -p 32769:8080 e4f1dff5abbf


7.  動作確認

# 起動したdockerのポート番号を確認
$ docker ps


# php-apache
curl http://localhost:8080/
or
curl http://localhost:32769/



# phpMyAdmin
curl http://localhost:80/
or
curl http://localhost:32770/



# 注意点
コンテナは再利用可能なので、終わったら消す
どっかーデスクトップからでもいいし、コマンドからでもいい







# エラー対応

PHPの環境を構築するもブラウザからうまく見れない
http://localhost:8080 NG
http://localhost It Worksと出る。

curl locaohost
一緒

Local Hostは以下を見ている
/Library/WebServer/Documents/index.html.en

http://localhost/index.html

---


これで切り分け
https://www.udemy.com/course/webphpmysqldocker/learn/lecture/32559446#overview

うまくいかない
docker run -d -p 80:80 --name my-apach-php-app -v ${PWD}:/var/www/html php 7.2-apache
docker run -d -p 8081:80 --name my-apach-php-app -v ${PWD}:/var/www/html php 7.2-apache
docker run -d -p 8081:80 --name my-apach-php-app -v ${PWD}:/var/www/html php 7.3-apache


一旦破棄
docker stop my-apach-php-app
docker rm my-apach-php-app

確認
Zend Engine v4.2.1, Copyright (c) Zend Technologies
    with Zend OPcache v8.2.1, Copyright (c), by Zend Technologies
yoshi@y0513 docker-php % docker ps -a
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS                        PORTS     NAMES
0d32c60be736   php       "docker-php-entrypoi…"   47 seconds ago   Exited (127) 46 seconds ago             my-apach-php-app

---



---
avast 止める
 docker-php % sudo lsof -i :80
COMMAND     PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
httpd     70586 root    4u  IPv6 0xe96e2e172423ddb5      0t0  TCP *:http (LISTEN)
httpd     70594 _www    4u  IPv6 0xe96e2e172423ddb5      0t0  TCP *:http (LISTEN)
com.avast 70624 root   70u  IPv4 0xe96e2e20c4e50a0d      0t0  TCP 192.168.10.103:59548->ams10-013.ff.avast.com:http (ESTABLISHED)
httpd     72272 _www    4u  IPv6 0xe96e2e172423ddb5      0t0  TCP *:http (LISTEN)
httpd     72275 _www    4u  IPv6 0xe96e2e172423ddb5      0t0  TCP *:http (LISTEN)
httpd     72276 _www    4u  IPv6 0xe96e2e172423ddb5      0t0  TCP *:http (LISTEN)
---


懸念点
ドッカーのポート
ローカルのポート
ファイルの場所
その辺。。。。






## VSCodeでPHPをデバッグする方法




---
デバッグ
書いたコードが想定通り動かない場合に原因を突き止めて修正すること
方法　ソースコードにデバッグログを出力するためのコードを仕込む
　　　画面にデバッグメッセージを表示して調査
　　　リアルタイムでソースコードをステップ実行しながらデバッグしていく

事前準備
　　デバッグしたい対象のアプリがローカル上で動作するようにしておく




